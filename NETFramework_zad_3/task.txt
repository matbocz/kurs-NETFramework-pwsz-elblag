
1) Create the new project named FileRead
Show information about files and directories 
by using Path, FileInfo, File, DirectoryInfo, DirectoryInfo types.
Separate actions in different methods in an extra class file.
1.1) 
Ask a user for a folder name. If the user miss value, assign '.' value that means a current folder.
Check if input folder exists.
Show on a screen the list of subfolders and files.
1.2)
Ask a user for a file name. If the user miss value, assign a text file name that exists in the current folder.
Check if input file exists.
Show on a screen the list of the file properties.

1.3)  
Create method CopyFiles() to rewrite a content file from one to another.

//tip:
DirectoryInfo d = new DirectoryInfo("c:\yourpath")
DirectoryInfo[] dd= d.GetDirectories();
FileInfo[] fx = d.GetFiles();

foreach (FileInfo f in fx) { ...}

FileInfo fileInfo = new FileInfo(filename);
Console.WriteLine("Extension: {0}", fileInfo.Extension);
Console.WriteLine("Path: {0}", fileInfo.FullName);
Console.WriteLine("Size: {0}", fileInfo.Length);

//--- ad copy files
            StreamReader srFrom;  
            StreamWriter swTo;

            // prompt for the input filename, read from console into sFrom, sTo variable
             try {
                srFrom = new StreamReader(sFrom);
                swTo = new StreamWriter(sTo);
                while (srFrom.Peek() != -1)
                {
                    string sBuffer = srFrom.ReadLine();
                    // use ToUpper() methods on sBuffer
                    swTo.WriteLine(sBuffer); 
                }
		// call Close method on both stream variables
            catch (Exception e) { ...


//---------------------------------------------
2)Read hosts from a text file (the same as at 2.2.). Prepare the text file: a host is in a line. 
Return the related IP adresses into a screen. Check hosts by ping to them. 
Obligatory use namespaces: System.Net, using System.Net.NetworkInformation.
Create HostsIP class in a separate class file and 3 methods. 
2.1)   public static void ReadFileToScreen(string filename)
show the file content and the result of 2 methods: HostPingIPAddress and CreateIPAddressString
        { try {                      
                using (StreamReader sr = new StreamReader(filename))
                {   string hostline = "";
                    while (hostline != null)
                    {  hostline = sr.ReadLine();
// call the ping method for the current hostline,if success convert IPaddress into string- stringAfterPing
//and pass stringAfterPing into WriteLine
                        Console.WriteLine("{0}; {1}; ping: {2} ", hostline, ShowIPAddress(hostline), stringAfterPing);

2.2) public static string ShowIPAddress(string hostName)
        {
            IPAddress[] addresslist = Dns.GetHostAddresses(hostName);
            foreach (IPAddress ipa in addresslist)
            {  //return all IPaddress as a one string variable

3.3) public static IPAddress HostPingIPAddress(string hostName)
        {   Ping ping = new Ping();
            var replay = ping.Send(hostName);       //ping to hostName,wait for replay
            if (replay.Status == IPStatus.Success)
             //return the replay value   .Address, in opposite return null
